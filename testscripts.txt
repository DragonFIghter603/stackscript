droid 48


power calculator with in/output:
"Enter base: " in parse "Enter exponent: " in parse dup sth swap dup sth swap ** sth out " to the power of " out out " is " out outln

a b
dup
a b b
sth
b a b
swap
b b a
dup
b b a a
sth
a b b a
swap
a b a b
**
a b (a**b)
sth
(a**b) a b
swap
(a**b) b a
(and then all the outs)

tests if values are equal:
"Enter value a: " in "Enter value b: " in dup sth swap dup sth = sth "Values \'" out out "\' and \'" out out "' are equal? " out outln


@-references:
func exec do @ end
2 3 @**
exec

# @+
[@+]
# store add
[]
# 1 2 add @
[3]
#


while loops:
# 10
[10]
# true while
#.. "rocket starts in: " out dup out "s" outln
#.. 1 - dup 0 >
#.. end # "takeoff!" outln
rocket starts in: 10s
rocket starts in: 9s
rocket starts in: 8s
rocket starts in: 7s
rocket starts in: 6s
rocket starts in: 5s
rocket starts in: 4s
rocket starts in: 3s
rocket starts in: 2s
rocket starts in: 1s
takeoff!
[0]
#


if's:
func foo do if trace outln end else trace outln end end
true foo
false foo
